<article id="categories">
    <ul class="grid-cols-4 grid gap-3 py-3 pr-6">
        @if (Categories?.Count() > 0)
        {
            @foreach (var category in Categories)
            {
                <li style="background-color: @category.Color" 
                    class="-text--bg-black2 flex min-h-28 w-full flex-col justify-between rounded-md p-3 text-sm font-normal hover:bg-gray-600hover:bg-gray-600"
                    @onclick="() => GetItemsByCategoryAsync(category)">
                    @((MarkupString)@category.Icon)
                    <div class="mt-3 flex-none">
                        <h4>@category.Name</h4>
                        <p class="text-xs">@category.Items.Count() items</p>
                    </div>
                </li>
            }
        }
        else
        {
            <h1 class="text-white">Not found...</h1>
        }
    </ul>
</article>


@code
{
    public IEnumerable<Category> Categories { get; set; }

    [Inject]
    public ICategoriesService CategoriesService { get; set; }

    [Parameter]
    public EventCallback<Category> OnCategorySelected { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Categories = await CategoriesService.GetCategoriesAsync();
    }

    public async Task GetItemsByCategoryAsync(Category category)
    {
        await OnCategorySelected.InvokeAsync(category);
    }
}